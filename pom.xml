<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ftdi</groupId>
	<artifactId>FTD2xxJ</artifactId>
	<version>0.3.2-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>

		<driver.windows.x64.url>https://www.ftdichip.com/Drivers/CDM/CDM%20v2.12.28%20WHQL%20Certified.zip</driver.windows.x64.url>
		<driver.windows.x86.url>https://www.ftdichip.com/Drivers/CDM/CDM%20v2.12.28%20WHQL%20Certified.zip</driver.windows.x86.url>
		<driver.linux.x64.url>https://www.ftdichip.com/Drivers/D2XX/Linux/libftd2xx-x86_64-1.4.8.gz</driver.linux.x64.url>
		<driver.linux.x86.url>https://www.ftdichip.com/Drivers/D2XX/Linux/libftd2xx-i386-1.4.8.gz</driver.linux.x86.url>
		<driver.linux.armv7hf.url>https://www.ftdichip.com/Drivers/D2XX/Linux/libftd2xx-arm-v7-hf-1.4.8.gz</driver.linux.armv7hf.url>
	</properties>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub dosimetrics Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/dosimetrics/JavaFTD2XX</url>
		</repository>
	</distributionManagement>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<testSourceDirectory>tst</testSourceDirectory>

		<pluginManagement>
			<plugins>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>

				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>3.0.0</version>
					<dependencies>
						<dependency>
							<groupId>org.tukaani</groupId>
							<artifactId>xz</artifactId>
							<version>1.8</version>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>3.2.3</version>
				</plugin>

				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-native</id>
						<phase>process-resources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/native</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.ftdi.Application</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>


		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>net.java.dev.jna</groupId>
				<artifactId>jna</artifactId>
				<version>5.5.0</version>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-buffer</artifactId>
				<version>4.1.50.Final</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>29.0-jre</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-buffer</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>update-native-libs</id>

			<build>
				<plugins>

					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>download-files</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="default">
										<mkdir
											dir="${project.build.directory}/dlls/windows.x64.unzip" />
										<mkdir
											dir="${project.build.directory}/dlls/windows.x86.unzip" />
										<mkdir
											dir="${project.build.directory}/dlls/linux.x64.unzip" />
										<mkdir
											dir="${project.build.directory}/dlls/linux.x86.unzip" />
										<mkdir
											dir="${project.build.directory}/dlls/linux.arm.unzip" />
										<mkdir
											dir="${project.build.directory}/dlls/darwin.unzip" />

										<mkdir dir="${project.basedir}/native/win32-x86-64" />
										<mkdir dir="${project.basedir}/native/win32-x86" />
										<mkdir dir="${project.basedir}/native/linux-x86-64" />
										<mkdir dir="${project.basedir}/native/linux-x86" />
										<mkdir dir="${project.basedir}/native/linux-arm" />
										<mkdir dir="${project.basedir}/native/darwin" />

										<get src="${driver.windows.x64.url}"
											dest="${project.build.directory}/dlls/windows.x64.zip"
											verbose="false" skipexisting="true" />
										<get src="${driver.windows.x64.url}"
											dest="${project.build.directory}/dlls/windows.x86.zip"
											verbose="false" skipexisting="true" />
										<get src="${driver.linux.x64.url}"
											dest="${project.build.directory}/dlls/linux.x64.gz"
											verbose="false" skipexisting="true" />
										<get src="${driver.linux.x64.url}"
											dest="${project.build.directory}/dlls/linux.x86.gz"
											verbose="false" skipexisting="true" />
										<get src="${driver.linux.armv7hf.url}"
											dest="${project.build.directory}/dlls/linux.arm.gz"
											verbose="false" skipexisting="true" />

										<unzip
											src="${project.build.directory}/dlls/windows.x64.zip"
											dest="${project.build.directory}/dlls/windows.x64.unzip/" />
										<unzip
											src="${project.build.directory}/dlls/windows.x86.zip"
											dest="${project.build.directory}/dlls/windows.x86.unzip/" />

										<gunzip
											src="${project.build.directory}/dlls/linux.x64.gz"
											dest="${project.build.directory}/dlls/linux.x64.unzip/" />
										<untar
											src="${project.build.directory}/dlls/linux.x64.unzip/linux.x64"
											dest="${project.build.directory}/dlls/linux.x64.unzip/" />

										<gunzip
											src="${project.build.directory}/dlls/linux.x86.gz"
											dest="${project.build.directory}/dlls/linux.x86.unzip/" />
										<untar
											src="${project.build.directory}/dlls/linux.x86.unzip/linux.x86"
											dest="${project.build.directory}/dlls/linux.x86.unzip/" />

										<gunzip
											src="${project.build.directory}/dlls/linux.arm.gz"
											dest="${project.build.directory}/dlls/linux.arm.unzip/" />
										<untar
											src="${project.build.directory}/dlls/linux.arm.unzip/linux.arm"
											dest="${project.build.directory}/dlls/linux.arm.unzip/" />


										<copy todir="${project.basedir}/native/win32-x86">
											<fileset
												dir="${project.build.directory}/dlls/windows.x86.unzip/i386">
												<include name="ftd2xx*.*" />
											</fileset>
										</copy>
										<copy todir="${project.basedir}/native/win32-x86-64">
											<fileset
												dir="${project.build.directory}/dlls/windows.x64.unzip/amd64">
												<include name="ftd2xx*.*" />
											</fileset>
										</copy>
										<copy todir="${project.basedir}/native/linux-x86">
											<fileset
												dir="${project.build.directory}/dlls/linux.x86.unzip/release/build/">
												<include name="libftd2xx*.*" />
												<exclude name="libftd2xx*.txt" />
											</fileset>
										</copy>
										<copy todir="${project.basedir}/native/linux-x86-64">
											<fileset
												dir="${project.build.directory}/dlls/linux.x64.unzip/release/build/">
												<include name="libftd2xx*.*" />
												<exclude name="libftd2xx*.txt" />
											</fileset>
										</copy>
										<copy todir="${project.basedir}/native/linux-arm">
											<fileset
												dir="${project.build.directory}/dlls/linux.arm.unzip/release/build/">
												<include name="libftd2xx*.*" />
												<exclude name="libftd2xx*.txt" />
											</fileset>
										</copy>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>build-fat-jar</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-shade-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>shade</goal>
								</goals>
								<configuration>
									<shadedArtifactAttached>true</shadedArtifactAttached>
									<shadedClassifierName>full</shadedClassifierName>
									<transformers>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
											<mainClass>com.ftdi.Application</mainClass>
											<manifestEntries>
												<X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
												<X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
												<versionName>${project.version}</versionName>
											</manifestEntries>
										</transformer>
									</transformers>
									<filters>
										<filter>
											<artifact>*:*</artifact>
											<excludes>
												<exclude>META-INF/MANIFEST.MF</exclude>
												<exclude>META-INF/*.SF</exclude>
												<exclude>META-INF/*.DSA</exclude>
												<exclude>META-INF/*.RSA</exclude>

												<exclude>com/sun/jna/aix-ppc/**</exclude>
												<exclude>com/sun/jna/aix-ppc64/**</exclude>
												<exclude>com/sun/jna/darwin/**</exclude>
												<exclude>com/sun/jna/darwin/**</exclude>
												<exclude>com/sun/jna/freebsd-x86/**</exclude>
												<exclude>com/sun/jna/freebsd-x86-64/**</exclude>
												<exclude>com/sun/jna/linux-aarch64/**</exclude>
												<exclude>com/sun/jna/linux-armel/**</exclude>
												<exclude>com/sun/jna/linux-mips64el/**</exclude>
												<exclude>com/sun/jna/linux-ppc/**</exclude>
												<exclude>com/sun/jna/linux-ppc64le/**</exclude>
												<exclude>com/sun/jna/linux-s390x/**</exclude>
												<exclude>com/sun/jna/openbsd-x86/**</exclude>
												<exclude>com/sun/jna/openbsd-x86-64/**</exclude>
												<exclude>com/sun/jna/sunos-sparc/**</exclude>
												<exclude>com/sun/jna/sunos-sparcv9/**</exclude>
												<exclude>com/sun/jna/sunos-x86/**</exclude>
												<exclude>com/sun/jna/sunos-x86-64/**</exclude>
											</excludes>
										</filter>
									</filters>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>